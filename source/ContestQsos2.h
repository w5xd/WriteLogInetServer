/* ContestQsos2.h
   Generated by wsdl2h 2.8.112 from ContestQsos2.wsdl and typemap.dat
   2021-03-25 23:57:32 GMT

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE.

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/**

@page page_notes Notes

@note HINTS:
 - Run soapcpp2 on ContestQsos2.h to generate the SOAP/XML processing logic:
   Use soapcpp2 -I to specify paths for #import
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Edit 'typemap.dat' to control namespace bindings and type mappings:
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -c to generate pure C code.
 - Use wsdl2h -R to include the REST operations defined by the WSDLs.
 - Use wsdl2h -O3 or -O4 to optimize by removing unused schema components.
 - Use wsdl2h -d to enable DOM support for xsd:any and xsd:anyType.
 - Use wsdl2h -F to simulate struct-type derivation in C (also works in C++).
 - Use wsdl2h -f to generate flat C++ class hierarchy, removes type derivation.
 - Use wsdl2h -g to generate top-level root elements with readers and writers.
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Use wsdl2h -L to remove this @note and all other @note comments.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE GENERATED soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c++,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   urn:ContestQsos2                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * $CONTAINER typemap variable:                                               *
 *   std::vector                                                              *
 *                                                                            *
\******************************************************************************/

#include <vector>
template <class T> class std::vector;

/******************************************************************************\
 *                                                                            *
 * $SIZE typemap variable:                                                    *
 *   int                                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to 'typemap.dat' then rerun wsdl2h (use wsdl2h -t typemap.dat):

contest23 = "urn:ContestQsos2"
contest26 = "http://schemas.microsoft.com/2003/10/Serialization/Arrays"
contest24 = "http://schemas.microsoft.com/2003/10/Serialization/"
contest25 = "http://schemas.datacontract.org/2004/07/ContestQsos"
contest22 = "urn:ContestQsos2/Imports"

*/

#define SOAP_NAMESPACE_OF_contest26	"http://schemas.microsoft.com/2003/10/Serialization/Arrays"
//gsoap contest26 schema namespace:	http://schemas.microsoft.com/2003/10/Serialization/Arrays
//gsoap contest26 schema elementForm:	qualified
//gsoap contest26 schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_contest24	"http://schemas.microsoft.com/2003/10/Serialization/"
//gsoap contest24 schema namespace:	http://schemas.microsoft.com/2003/10/Serialization/
//gsoap contest24 schema form:	qualified

#define SOAP_NAMESPACE_OF_contest25	"http://schemas.datacontract.org/2004/07/ContestQsos"
//gsoap contest25 schema namespace:	http://schemas.datacontract.org/2004/07/ContestQsos
//gsoap contest25 schema elementForm:	qualified
//gsoap contest25 schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_contest23	"urn:ContestQsos2"
//gsoap contest23 schema namespace:	urn:ContestQsos2
//gsoap contest23 schema elementForm:	qualified
//gsoap contest23 schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_contest22	"urn:ContestQsos2/Imports"
//gsoap contest22 schema namespace:	urn:ContestQsos2/Imports
//gsoap contest22 schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD root type "xs:anyType".
///
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__anyType or a derived type.  Use option -P to remove this class.
class xsd__anyType
{ public:
    _XML __item;
    struct soap *soap;
};

/// Built-in type "xs:QName".
typedef std::string xsd__QName;

/// Built-in type "xs:base64Binary".
class xsd__base64Binary
{ public:
    unsigned char *__ptr;
    int __size;
    char *id, *type, *options; // NOTE: non-NULL for DIME/MIME/MTOM XOP attachments only
};

/// Built-in type "xs:byte".
typedef char xsd__byte;

/// Built-in type "xs:unsignedByte".
typedef unsigned char xsd__unsignedByte;

/// Primitive built-in type "xs:ID".
typedef std::string xsd__ID;

/// Class wrapper xsd__ID__ for built-in type "xs:ID" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__ID__ or a derived type.  Use option -P to remove this class.
class xsd__ID__ : public xsd__anyType
{ public:
    xsd__ID                              __item                        ;
};

/// Primitive built-in type "xs:IDREF".
typedef std::string xsd__IDREF;

/// Class wrapper xsd__IDREF__ for built-in type "xs:IDREF" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__IDREF__ or a derived type.  Use option -P to remove this class.
class xsd__IDREF__ : public xsd__anyType
{ public:
    xsd__IDREF                           __item                        ;
};

/// Class wrapper xsd__QName__ for built-in type "xs:QName" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__QName__ or a derived type.  Use option -P to remove this class.
class xsd__QName__ : public xsd__anyType
{ public:
    xsd__QName                           __item                        ;
};

/// Primitive built-in type "xs:anyURI".
typedef std::string xsd__anyURI;

/// Class wrapper xsd__anyURI__ for built-in type "xs:anyURI" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__anyURI__ or a derived type.  Use option -P to remove this class.
class xsd__anyURI__ : public xsd__anyType
{ public:
    xsd__anyURI                          __item                        ;
};

/// Class wrapper xsd__base64Binary__ for built-in type "xs:base64Binary" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__base64Binary__ or a derived type.  Use option -P to remove this class.
class xsd__base64Binary__ : public xsd__anyType
{ public:
    xsd__base64Binary                    __item                        ;
};

/// Class wrapper xsd__boolean_ for built-in type "xs:boolean" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__boolean_ or a derived type.  Use option -P to remove this class.
class xsd__boolean_ : public xsd__anyType
{ public:
    bool                                 __item                        ;
};

/// Class wrapper xsd__byte__ for built-in type "xs:byte" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__byte__ or a derived type.  Use option -P to remove this class.
class xsd__byte__ : public xsd__anyType
{ public:
    xsd__byte                            __item                        ;
};

/// Class wrapper xsd__dateTime_ for built-in type "xs:dateTime" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__dateTime_ or a derived type.  Use option -P to remove this class.
class xsd__dateTime_ : public xsd__anyType
{ public:
    time_t                               __item                        ;
};

/// Primitive built-in type "xs:decimal".
typedef std::string xsd__decimal;

/// Class wrapper xsd__decimal__ for built-in type "xs:decimal" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__decimal__ or a derived type.  Use option -P to remove this class.
class xsd__decimal__ : public xsd__anyType
{ public:
    xsd__decimal                         __item                        ;
};

/// Class wrapper xsd__double_ for built-in type "xs:double" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__double_ or a derived type.  Use option -P to remove this class.
class xsd__double_ : public xsd__anyType
{ public:
    double                               __item                        ;
};

/// Primitive built-in type "xs:duration".
typedef std::string xsd__duration;

/// Class wrapper xsd__duration__ for built-in type "xs:duration" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__duration__ or a derived type.  Use option -P to remove this class.
class xsd__duration__ : public xsd__anyType
{ public:
    xsd__duration                        __item                        ;
};

/// Class wrapper xsd__float_ for built-in type "xs:float" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__float_ or a derived type.  Use option -P to remove this class.
class xsd__float_ : public xsd__anyType
{ public:
    float                                __item                        ;
};

/// Class wrapper xsd__int_ for built-in type "xs:int" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__int_ or a derived type.  Use option -P to remove this class.
class xsd__int_ : public xsd__anyType
{ public:
    int                                  __item                        ;
};

/// Class wrapper xsd__long_ for built-in type "xs:long" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__long_ or a derived type.  Use option -P to remove this class.
class xsd__long_ : public xsd__anyType
{ public:
    LONG64                               __item                        ;
};

/// Class wrapper xsd__short_ for built-in type "xs:short" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__short_ or a derived type.  Use option -P to remove this class.
class xsd__short_ : public xsd__anyType
{ public:
    short                                __item                        ;
};

/// Class wrapper xsd__string_ for built-in type "xs:string" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__string_ or a derived type.  Use option -P to remove this class.
class xsd__string_ : public xsd__anyType
{ public:
    std::string                          __item                        ;
};

/// Class wrapper xsd__unsignedByte__ for built-in type "xs:unsignedByte" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__unsignedByte__ or a derived type.  Use option -P to remove this class.
class xsd__unsignedByte__ : public xsd__anyType
{ public:
    xsd__unsignedByte                    __item                        ;
};

/// Class wrapper xsd__unsignedInt_ for built-in type "xs:unsignedInt" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__unsignedInt_ or a derived type.  Use option -P to remove this class.
class xsd__unsignedInt_ : public xsd__anyType
{ public:
    unsigned int                         __item                        ;
};

/// Class wrapper xsd__unsignedLong_ for built-in type "xs:unsignedLong" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__unsignedLong_ or a derived type.  Use option -P to remove this class.
class xsd__unsignedLong_ : public xsd__anyType
{ public:
    ULONG64                              __item                        ;
};

/// Class wrapper xsd__unsignedShort_ for built-in type "xs:unsignedShort" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__unsignedShort_ or a derived type.  Use option -P to remove this class.
class xsd__unsignedShort_ : public xsd__anyType
{ public:
    unsigned short                       __item                        ;
};


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


class contest26__ArrayOfstring;

class contest26__ArrayOfint;

class contest25__ArrayOfQso;

class contest25__Qso;

class contest25__QsoUpdate;

class contest25__LogSummary;

class contest25__ArrayOfQsoIdVersion;

class contest25__QsoIdVersion;

class contest25__ArrayOfRigFrequency;

class contest25__RigFrequency;

class _contest23__GetSessionId;

class _contest23__GetSessionIdResponse;

class _contest23__addAndGetQsos;

class _contest23__addAndGetQsosResponse;

class _contest23__AddAndGetLogSummary;

class _contest23__AddAndGetLogSummaryResponse;

class _contest23__getQsosByKeyArray;

class _contest23__getQsosByKeyArrayResponse;

class _contest23__ColumnNamesToIndices;

class _contest23__ColumnNamesToIndicesResponse;

class _contest23__ExchangeFrequencies;

class _contest23__ExchangeFrequenciesResponse;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.microsoft.com/2003/10/Serialization/Arrays                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.datacontract.org/2004/07/ContestQsos                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:ContestQsos2                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:ContestQsos2/Imports                                                 *
 *                                                                            *
\******************************************************************************/

/// @brief "http://schemas.microsoft.com/2003/10/Serialization/":char is a simpleType restriction of type xs:int.
///
typedef int contest24__char;

/// @brief Class wrapper for type contest24__char derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class contest24__char__ : public xsd__anyType
{ public:
    contest24__char                      __item;                       
};

/// @brief "http://schemas.microsoft.com/2003/10/Serialization/":duration is a simpleType restriction of type xs:duration.
///
/// Content pattern is "\\-?P(\\d*D)?(T(\\d*H)?(\\d*M)?(\\d*(\\.\\d*)?S)?)?".
/// Value range is -P10675199DT2H48M5.4775808S to P10675199DT2H48M5.4775807S.
typedef xsd__duration contest24__duration "\\-?P(\\d*D)?(T(\\d*H)?(\\d*M)?(\\d*(\\.\\d*)?S)?)?";

/// @brief Class wrapper for type contest24__duration derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class contest24__duration__ : public xsd__anyType
{ public:
    contest24__duration                  __item;                       
};

/// @brief "http://schemas.microsoft.com/2003/10/Serialization/":guid is a simpleType restriction of type xs:string.
///
/// Content pattern is "[\\da-fA-F]{8}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{12}".
typedef std::string contest24__guid "[\\da-fA-F]{8}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{12}";

/// @brief Class wrapper for type contest24__guid derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class contest24__guid__ : public xsd__anyType
{ public:
    contest24__guid                      __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.datacontract.org/2004/07/ContestQsos                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:ContestQsos2                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:ContestQsos2/Imports                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://schemas.microsoft.com/2003/10/Serialization/Arrays                *
 *                                                                            *
\******************************************************************************/

/// @brief "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfstring is a complexType.
///
/// @note class contest26__ArrayOfstring operations:
/// - contest26__ArrayOfstring* soap_new_contest26__ArrayOfstring(soap*) allocate and default initialize
/// - contest26__ArrayOfstring* soap_new_contest26__ArrayOfstring(soap*, int num) allocate and default initialize an array
/// - contest26__ArrayOfstring* soap_new_req_contest26__ArrayOfstring(soap*, ...) allocate, set required members
/// - contest26__ArrayOfstring* soap_new_set_contest26__ArrayOfstring(soap*, ...) allocate, set all public members
/// - contest26__ArrayOfstring::soap_default(soap*) default initialize members
/// - int soap_read_contest26__ArrayOfstring(soap*, contest26__ArrayOfstring*) deserialize from a stream
/// - int soap_write_contest26__ArrayOfstring(soap*, contest26__ArrayOfstring*) serialize to a stream
/// - contest26__ArrayOfstring* contest26__ArrayOfstring::soap_dup(soap*) returns deep copy of contest26__ArrayOfstring, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - contest26__ArrayOfstring::soap_del() deep deletes contest26__ArrayOfstring data members, use only after contest26__ArrayOfstring::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int contest26__ArrayOfstring::soap_type() returns SOAP_TYPE_contest26__ArrayOfstring or derived type identifier
class contest26__ArrayOfstring : public xsd__anyType
{ public:
/// Vector of std::string of length 0..unbounded.
    std::vector<std::string            > string                         0;	///< Multiple elements.
};

/// @brief "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfint is a complexType.
///
/// @note class contest26__ArrayOfint operations:
/// - contest26__ArrayOfint* soap_new_contest26__ArrayOfint(soap*) allocate and default initialize
/// - contest26__ArrayOfint* soap_new_contest26__ArrayOfint(soap*, int num) allocate and default initialize an array
/// - contest26__ArrayOfint* soap_new_req_contest26__ArrayOfint(soap*, ...) allocate, set required members
/// - contest26__ArrayOfint* soap_new_set_contest26__ArrayOfint(soap*, ...) allocate, set all public members
/// - contest26__ArrayOfint::soap_default(soap*) default initialize members
/// - int soap_read_contest26__ArrayOfint(soap*, contest26__ArrayOfint*) deserialize from a stream
/// - int soap_write_contest26__ArrayOfint(soap*, contest26__ArrayOfint*) serialize to a stream
/// - contest26__ArrayOfint* contest26__ArrayOfint::soap_dup(soap*) returns deep copy of contest26__ArrayOfint, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - contest26__ArrayOfint::soap_del() deep deletes contest26__ArrayOfint data members, use only after contest26__ArrayOfint::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int contest26__ArrayOfint::soap_type() returns SOAP_TYPE_contest26__ArrayOfint or derived type identifier
class contest26__ArrayOfint : public xsd__anyType
{ public:
/// Vector of int of length 0..unbounded.
    std::vector<int                    > int_                           0;	///< Multiple elements.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://schemas.datacontract.org/2004/07/ContestQsos                      *
 *                                                                            *
\******************************************************************************/

/// @brief "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfQso is a complexType.
///
/// @note class contest25__ArrayOfQso operations:
/// - contest25__ArrayOfQso* soap_new_contest25__ArrayOfQso(soap*) allocate and default initialize
/// - contest25__ArrayOfQso* soap_new_contest25__ArrayOfQso(soap*, int num) allocate and default initialize an array
/// - contest25__ArrayOfQso* soap_new_req_contest25__ArrayOfQso(soap*, ...) allocate, set required members
/// - contest25__ArrayOfQso* soap_new_set_contest25__ArrayOfQso(soap*, ...) allocate, set all public members
/// - contest25__ArrayOfQso::soap_default(soap*) default initialize members
/// - int soap_read_contest25__ArrayOfQso(soap*, contest25__ArrayOfQso*) deserialize from a stream
/// - int soap_write_contest25__ArrayOfQso(soap*, contest25__ArrayOfQso*) serialize to a stream
/// - contest25__ArrayOfQso* contest25__ArrayOfQso::soap_dup(soap*) returns deep copy of contest25__ArrayOfQso, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - contest25__ArrayOfQso::soap_del() deep deletes contest25__ArrayOfQso data members, use only after contest25__ArrayOfQso::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int contest25__ArrayOfQso::soap_type() returns SOAP_TYPE_contest25__ArrayOfQso or derived type identifier
class contest25__ArrayOfQso : public xsd__anyType
{ public:
/// Vector of contest25__Qso* of length 0..unbounded.
    std::vector<contest25__Qso*        > Qso                            0;	///< Multiple elements.
};

/// @brief "http://schemas.datacontract.org/2004/07/ContestQsos":Qso is a complexType.
///
/// @note class contest25__Qso operations:
/// - contest25__Qso* soap_new_contest25__Qso(soap*) allocate and default initialize
/// - contest25__Qso* soap_new_contest25__Qso(soap*, int num) allocate and default initialize an array
/// - contest25__Qso* soap_new_req_contest25__Qso(soap*, ...) allocate, set required members
/// - contest25__Qso* soap_new_set_contest25__Qso(soap*, ...) allocate, set all public members
/// - contest25__Qso::soap_default(soap*) default initialize members
/// - int soap_read_contest25__Qso(soap*, contest25__Qso*) deserialize from a stream
/// - int soap_write_contest25__Qso(soap*, contest25__Qso*) serialize to a stream
/// - contest25__Qso* contest25__Qso::soap_dup(soap*) returns deep copy of contest25__Qso, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - contest25__Qso::soap_del() deep deletes contest25__Qso data members, use only after contest25__Qso::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int contest25__Qso::soap_type() returns SOAP_TYPE_contest25__Qso or derived type identifier
class contest25__Qso : public xsd__anyType
{ public:
/// Element "band" of type xs:int.
    int                                  band                           1;	///< Required element.
/// Element "dupe" of type xs:int.
    int                                  dupe                           1;	///< Required element.
/// Element "idKey" of type xs:string.
    std::string                          idKey                          1;	///< Required element.
/// Element "mode" of type xs:int.
    int                                  mode                           1;	///< Required element.
/// Element "qsoparts" of type "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfstring.
    contest26__ArrayOfstring*            qsoparts                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "recvFreq" of type xs:double.
    double                               recvFreq                       1;	///< Required element.
/// Element "serial" of type xs:int.
    int                                  serial                         1;	///< Required element.
/// Element "station" of type xs:string.
    std::string                          station                        1;	///< Required element.
/// Element "time64H" of type xs:int.
    int                                  time64H                        1;	///< Required element.
/// Element "time64L" of type xs:int.
    int                                  time64L                        1;	///< Required element.
/// Element "updatedBy" of type xs:string.
    std::string                          updatedBy                      1;	///< Required element.
/// Element "version" of type xs:int.
    int                                  version                        1;	///< Required element.
/// Element "xmitFreq" of type xs:double.
    double                               xmitFreq                       1;	///< Required element.
};

/// @brief "http://schemas.datacontract.org/2004/07/ContestQsos":QsoUpdate is a complexType.
///
/// @note class contest25__QsoUpdate operations:
/// - contest25__QsoUpdate* soap_new_contest25__QsoUpdate(soap*) allocate and default initialize
/// - contest25__QsoUpdate* soap_new_contest25__QsoUpdate(soap*, int num) allocate and default initialize an array
/// - contest25__QsoUpdate* soap_new_req_contest25__QsoUpdate(soap*, ...) allocate, set required members
/// - contest25__QsoUpdate* soap_new_set_contest25__QsoUpdate(soap*, ...) allocate, set all public members
/// - contest25__QsoUpdate::soap_default(soap*) default initialize members
/// - int soap_read_contest25__QsoUpdate(soap*, contest25__QsoUpdate*) deserialize from a stream
/// - int soap_write_contest25__QsoUpdate(soap*, contest25__QsoUpdate*) serialize to a stream
/// - contest25__QsoUpdate* contest25__QsoUpdate::soap_dup(soap*) returns deep copy of contest25__QsoUpdate, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - contest25__QsoUpdate::soap_del() deep deletes contest25__QsoUpdate data members, use only after contest25__QsoUpdate::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int contest25__QsoUpdate::soap_type() returns SOAP_TYPE_contest25__QsoUpdate or derived type identifier
class contest25__QsoUpdate : public xsd__anyType
{ public:
/// Element "logState" of type xs:int.
    int                                  logState                       1;	///< Required element.
/// Element "qsoArray" of type "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfQso.
    contest25__ArrayOfQso*               qsoArray                       nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
};

/// @brief "http://schemas.datacontract.org/2004/07/ContestQsos":LogSummary is a complexType.
///
/// @note class contest25__LogSummary operations:
/// - contest25__LogSummary* soap_new_contest25__LogSummary(soap*) allocate and default initialize
/// - contest25__LogSummary* soap_new_contest25__LogSummary(soap*, int num) allocate and default initialize an array
/// - contest25__LogSummary* soap_new_req_contest25__LogSummary(soap*, ...) allocate, set required members
/// - contest25__LogSummary* soap_new_set_contest25__LogSummary(soap*, ...) allocate, set all public members
/// - contest25__LogSummary::soap_default(soap*) default initialize members
/// - int soap_read_contest25__LogSummary(soap*, contest25__LogSummary*) deserialize from a stream
/// - int soap_write_contest25__LogSummary(soap*, contest25__LogSummary*) serialize to a stream
/// - contest25__LogSummary* contest25__LogSummary::soap_dup(soap*) returns deep copy of contest25__LogSummary, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - contest25__LogSummary::soap_del() deep deletes contest25__LogSummary data members, use only after contest25__LogSummary::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int contest25__LogSummary::soap_type() returns SOAP_TYPE_contest25__LogSummary or derived type identifier
class contest25__LogSummary : public xsd__anyType
{ public:
/// Element "logState" of type xs:int.
    int                                  logState                       1;	///< Required element.
/// Element "logSummaryIds" of type "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfQsoIdVersion.
    contest25__ArrayOfQsoIdVersion*      logSummaryIds                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
};

/// @brief "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfQsoIdVersion is a complexType.
///
/// @note class contest25__ArrayOfQsoIdVersion operations:
/// - contest25__ArrayOfQsoIdVersion* soap_new_contest25__ArrayOfQsoIdVersion(soap*) allocate and default initialize
/// - contest25__ArrayOfQsoIdVersion* soap_new_contest25__ArrayOfQsoIdVersion(soap*, int num) allocate and default initialize an array
/// - contest25__ArrayOfQsoIdVersion* soap_new_req_contest25__ArrayOfQsoIdVersion(soap*, ...) allocate, set required members
/// - contest25__ArrayOfQsoIdVersion* soap_new_set_contest25__ArrayOfQsoIdVersion(soap*, ...) allocate, set all public members
/// - contest25__ArrayOfQsoIdVersion::soap_default(soap*) default initialize members
/// - int soap_read_contest25__ArrayOfQsoIdVersion(soap*, contest25__ArrayOfQsoIdVersion*) deserialize from a stream
/// - int soap_write_contest25__ArrayOfQsoIdVersion(soap*, contest25__ArrayOfQsoIdVersion*) serialize to a stream
/// - contest25__ArrayOfQsoIdVersion* contest25__ArrayOfQsoIdVersion::soap_dup(soap*) returns deep copy of contest25__ArrayOfQsoIdVersion, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - contest25__ArrayOfQsoIdVersion::soap_del() deep deletes contest25__ArrayOfQsoIdVersion data members, use only after contest25__ArrayOfQsoIdVersion::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int contest25__ArrayOfQsoIdVersion::soap_type() returns SOAP_TYPE_contest25__ArrayOfQsoIdVersion or derived type identifier
class contest25__ArrayOfQsoIdVersion : public xsd__anyType
{ public:
/// Vector of contest25__QsoIdVersion* of length 0..unbounded.
    std::vector<contest25__QsoIdVersion*> QsoIdVersion                   0;	///< Multiple elements.
};

/// @brief "http://schemas.datacontract.org/2004/07/ContestQsos":QsoIdVersion is a complexType.
///
/// @note class contest25__QsoIdVersion operations:
/// - contest25__QsoIdVersion* soap_new_contest25__QsoIdVersion(soap*) allocate and default initialize
/// - contest25__QsoIdVersion* soap_new_contest25__QsoIdVersion(soap*, int num) allocate and default initialize an array
/// - contest25__QsoIdVersion* soap_new_req_contest25__QsoIdVersion(soap*, ...) allocate, set required members
/// - contest25__QsoIdVersion* soap_new_set_contest25__QsoIdVersion(soap*, ...) allocate, set all public members
/// - contest25__QsoIdVersion::soap_default(soap*) default initialize members
/// - int soap_read_contest25__QsoIdVersion(soap*, contest25__QsoIdVersion*) deserialize from a stream
/// - int soap_write_contest25__QsoIdVersion(soap*, contest25__QsoIdVersion*) serialize to a stream
/// - contest25__QsoIdVersion* contest25__QsoIdVersion::soap_dup(soap*) returns deep copy of contest25__QsoIdVersion, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - contest25__QsoIdVersion::soap_del() deep deletes contest25__QsoIdVersion data members, use only after contest25__QsoIdVersion::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int contest25__QsoIdVersion::soap_type() returns SOAP_TYPE_contest25__QsoIdVersion or derived type identifier
class contest25__QsoIdVersion : public xsd__anyType
{ public:
/// Element "id" of type xs:string.
    std::string                          id                             1;	///< Required element.
/// Element "updatedBy" of type xs:string.
    std::string                          updatedBy                      1;	///< Required element.
/// Element "version" of type xs:int.
    int                                  version                        1;	///< Required element.
};

/// @brief "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfRigFrequency is a complexType.
///
/// @note class contest25__ArrayOfRigFrequency operations:
/// - contest25__ArrayOfRigFrequency* soap_new_contest25__ArrayOfRigFrequency(soap*) allocate and default initialize
/// - contest25__ArrayOfRigFrequency* soap_new_contest25__ArrayOfRigFrequency(soap*, int num) allocate and default initialize an array
/// - contest25__ArrayOfRigFrequency* soap_new_req_contest25__ArrayOfRigFrequency(soap*, ...) allocate, set required members
/// - contest25__ArrayOfRigFrequency* soap_new_set_contest25__ArrayOfRigFrequency(soap*, ...) allocate, set all public members
/// - contest25__ArrayOfRigFrequency::soap_default(soap*) default initialize members
/// - int soap_read_contest25__ArrayOfRigFrequency(soap*, contest25__ArrayOfRigFrequency*) deserialize from a stream
/// - int soap_write_contest25__ArrayOfRigFrequency(soap*, contest25__ArrayOfRigFrequency*) serialize to a stream
/// - contest25__ArrayOfRigFrequency* contest25__ArrayOfRigFrequency::soap_dup(soap*) returns deep copy of contest25__ArrayOfRigFrequency, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - contest25__ArrayOfRigFrequency::soap_del() deep deletes contest25__ArrayOfRigFrequency data members, use only after contest25__ArrayOfRigFrequency::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int contest25__ArrayOfRigFrequency::soap_type() returns SOAP_TYPE_contest25__ArrayOfRigFrequency or derived type identifier
class contest25__ArrayOfRigFrequency : public xsd__anyType
{ public:
/// Vector of contest25__RigFrequency* of length 1..unbounded.
    std::vector<contest25__RigFrequency*> RigFrequency                   1;	///< Multiple elements.
};

/// @brief "http://schemas.datacontract.org/2004/07/ContestQsos":RigFrequency is a complexType.
///
/// @note class contest25__RigFrequency operations:
/// - contest25__RigFrequency* soap_new_contest25__RigFrequency(soap*) allocate and default initialize
/// - contest25__RigFrequency* soap_new_contest25__RigFrequency(soap*, int num) allocate and default initialize an array
/// - contest25__RigFrequency* soap_new_req_contest25__RigFrequency(soap*, ...) allocate, set required members
/// - contest25__RigFrequency* soap_new_set_contest25__RigFrequency(soap*, ...) allocate, set all public members
/// - contest25__RigFrequency::soap_default(soap*) default initialize members
/// - int soap_read_contest25__RigFrequency(soap*, contest25__RigFrequency*) deserialize from a stream
/// - int soap_write_contest25__RigFrequency(soap*, contest25__RigFrequency*) serialize to a stream
/// - contest25__RigFrequency* contest25__RigFrequency::soap_dup(soap*) returns deep copy of contest25__RigFrequency, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - contest25__RigFrequency::soap_del() deep deletes contest25__RigFrequency data members, use only after contest25__RigFrequency::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int contest25__RigFrequency::soap_type() returns SOAP_TYPE_contest25__RigFrequency or derived type identifier
class contest25__RigFrequency : public xsd__anyType
{ public:
/// Element "label" of type xs:string.
    std::string                          label                          1;	///< Required element.
/// Element "mode" of type xs:int.
    int                                  mode                           1;	///< Required element.
/// Element "networkLetter" of type xs:int.
    int                                  networkLetter                  1;	///< Required element.
/// Element "recvFreq" of type xs:double.
    double                               recvFreq                       1;	///< Required element.
/// Element "rigNumber" of type xs:int.
    int                                  rigNumber                      1;	///< Required element.
/// Element "station" of type xs:string.
    std::string                          station                        1;	///< Required element.
/// Element "xmitFreq" of type xs:double.
    double                               xmitFreq                       1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   urn:ContestQsos2                                                         *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "urn:ContestQsos2":GetSessionId
/// @brief "urn:ContestQsos2":GetSessionId is a complexType.
///
/// @note class _contest23__GetSessionId operations:
/// - _contest23__GetSessionId* soap_new__contest23__GetSessionId(soap*) allocate and default initialize
/// - _contest23__GetSessionId* soap_new__contest23__GetSessionId(soap*, int num) allocate and default initialize an array
/// - _contest23__GetSessionId* soap_new_req__contest23__GetSessionId(soap*, ...) allocate, set required members
/// - _contest23__GetSessionId* soap_new_set__contest23__GetSessionId(soap*, ...) allocate, set all public members
/// - _contest23__GetSessionId::soap_default(soap*) default initialize members
/// - int soap_read__contest23__GetSessionId(soap*, _contest23__GetSessionId*) deserialize from a stream
/// - int soap_write__contest23__GetSessionId(soap*, _contest23__GetSessionId*) serialize to a stream
/// - _contest23__GetSessionId* _contest23__GetSessionId::soap_dup(soap*) returns deep copy of _contest23__GetSessionId, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _contest23__GetSessionId::soap_del() deep deletes _contest23__GetSessionId data members, use only after _contest23__GetSessionId::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _contest23__GetSessionId::soap_type() returns SOAP_TYPE__contest23__GetSessionId or derived type identifier
class _contest23__GetSessionId
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "urn:ContestQsos2":GetSessionIdResponse
/// @brief "urn:ContestQsos2":GetSessionIdResponse is a complexType.
///
/// @note class _contest23__GetSessionIdResponse operations:
/// - _contest23__GetSessionIdResponse* soap_new__contest23__GetSessionIdResponse(soap*) allocate and default initialize
/// - _contest23__GetSessionIdResponse* soap_new__contest23__GetSessionIdResponse(soap*, int num) allocate and default initialize an array
/// - _contest23__GetSessionIdResponse* soap_new_req__contest23__GetSessionIdResponse(soap*, ...) allocate, set required members
/// - _contest23__GetSessionIdResponse* soap_new_set__contest23__GetSessionIdResponse(soap*, ...) allocate, set all public members
/// - _contest23__GetSessionIdResponse::soap_default(soap*) default initialize members
/// - int soap_read__contest23__GetSessionIdResponse(soap*, _contest23__GetSessionIdResponse*) deserialize from a stream
/// - int soap_write__contest23__GetSessionIdResponse(soap*, _contest23__GetSessionIdResponse*) serialize to a stream
/// - _contest23__GetSessionIdResponse* _contest23__GetSessionIdResponse::soap_dup(soap*) returns deep copy of _contest23__GetSessionIdResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _contest23__GetSessionIdResponse::soap_del() deep deletes _contest23__GetSessionIdResponse data members, use only after _contest23__GetSessionIdResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _contest23__GetSessionIdResponse::soap_type() returns SOAP_TYPE__contest23__GetSessionIdResponse or derived type identifier
class _contest23__GetSessionIdResponse
{ public:
/// Element "GetSessionIdResult" of type xs:string.
    std::string                          GetSessionIdResult             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "urn:ContestQsos2":addAndGetQsos
/// @brief "urn:ContestQsos2":addAndGetQsos is a complexType.
///
/// @note class _contest23__addAndGetQsos operations:
/// - _contest23__addAndGetQsos* soap_new__contest23__addAndGetQsos(soap*) allocate and default initialize
/// - _contest23__addAndGetQsos* soap_new__contest23__addAndGetQsos(soap*, int num) allocate and default initialize an array
/// - _contest23__addAndGetQsos* soap_new_req__contest23__addAndGetQsos(soap*, ...) allocate, set required members
/// - _contest23__addAndGetQsos* soap_new_set__contest23__addAndGetQsos(soap*, ...) allocate, set all public members
/// - _contest23__addAndGetQsos::soap_default(soap*) default initialize members
/// - int soap_read__contest23__addAndGetQsos(soap*, _contest23__addAndGetQsos*) deserialize from a stream
/// - int soap_write__contest23__addAndGetQsos(soap*, _contest23__addAndGetQsos*) serialize to a stream
/// - _contest23__addAndGetQsos* _contest23__addAndGetQsos::soap_dup(soap*) returns deep copy of _contest23__addAndGetQsos, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _contest23__addAndGetQsos::soap_del() deep deletes _contest23__addAndGetQsos data members, use only after _contest23__addAndGetQsos::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _contest23__addAndGetQsos::soap_type() returns SOAP_TYPE__contest23__addAndGetQsos or derived type identifier
class _contest23__addAndGetQsos
{ public:
/// Element "SessionId" of type xs:string.
    std::string                          SessionId                      1;	///< Required element.
/// Element "QsoAddArray" of type "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfQso.
    contest25__ArrayOfQso*               QsoAddArray                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "OldState" of type xs:int.
    int                                  OldState                       1;	///< Required element.
/// Element "MaxRequested" of type xs:int.
    int                                  MaxRequested                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "urn:ContestQsos2":addAndGetQsosResponse
/// @brief "urn:ContestQsos2":addAndGetQsosResponse is a complexType.
///
/// @note class _contest23__addAndGetQsosResponse operations:
/// - _contest23__addAndGetQsosResponse* soap_new__contest23__addAndGetQsosResponse(soap*) allocate and default initialize
/// - _contest23__addAndGetQsosResponse* soap_new__contest23__addAndGetQsosResponse(soap*, int num) allocate and default initialize an array
/// - _contest23__addAndGetQsosResponse* soap_new_req__contest23__addAndGetQsosResponse(soap*, ...) allocate, set required members
/// - _contest23__addAndGetQsosResponse* soap_new_set__contest23__addAndGetQsosResponse(soap*, ...) allocate, set all public members
/// - _contest23__addAndGetQsosResponse::soap_default(soap*) default initialize members
/// - int soap_read__contest23__addAndGetQsosResponse(soap*, _contest23__addAndGetQsosResponse*) deserialize from a stream
/// - int soap_write__contest23__addAndGetQsosResponse(soap*, _contest23__addAndGetQsosResponse*) serialize to a stream
/// - _contest23__addAndGetQsosResponse* _contest23__addAndGetQsosResponse::soap_dup(soap*) returns deep copy of _contest23__addAndGetQsosResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _contest23__addAndGetQsosResponse::soap_del() deep deletes _contest23__addAndGetQsosResponse data members, use only after _contest23__addAndGetQsosResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _contest23__addAndGetQsosResponse::soap_type() returns SOAP_TYPE__contest23__addAndGetQsosResponse or derived type identifier
class _contest23__addAndGetQsosResponse
{ public:
/// Element "addAndGetQsosResult" of type "http://schemas.datacontract.org/2004/07/ContestQsos":QsoUpdate.
    contest25__QsoUpdate*                addAndGetQsosResult            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "urn:ContestQsos2":AddAndGetLogSummary
/// @brief "urn:ContestQsos2":AddAndGetLogSummary is a complexType.
///
/// @note class _contest23__AddAndGetLogSummary operations:
/// - _contest23__AddAndGetLogSummary* soap_new__contest23__AddAndGetLogSummary(soap*) allocate and default initialize
/// - _contest23__AddAndGetLogSummary* soap_new__contest23__AddAndGetLogSummary(soap*, int num) allocate and default initialize an array
/// - _contest23__AddAndGetLogSummary* soap_new_req__contest23__AddAndGetLogSummary(soap*, ...) allocate, set required members
/// - _contest23__AddAndGetLogSummary* soap_new_set__contest23__AddAndGetLogSummary(soap*, ...) allocate, set all public members
/// - _contest23__AddAndGetLogSummary::soap_default(soap*) default initialize members
/// - int soap_read__contest23__AddAndGetLogSummary(soap*, _contest23__AddAndGetLogSummary*) deserialize from a stream
/// - int soap_write__contest23__AddAndGetLogSummary(soap*, _contest23__AddAndGetLogSummary*) serialize to a stream
/// - _contest23__AddAndGetLogSummary* _contest23__AddAndGetLogSummary::soap_dup(soap*) returns deep copy of _contest23__AddAndGetLogSummary, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _contest23__AddAndGetLogSummary::soap_del() deep deletes _contest23__AddAndGetLogSummary data members, use only after _contest23__AddAndGetLogSummary::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _contest23__AddAndGetLogSummary::soap_type() returns SOAP_TYPE__contest23__AddAndGetLogSummary or derived type identifier
class _contest23__AddAndGetLogSummary
{ public:
/// Element "SessionId" of type xs:string.
    std::string                          SessionId                      1;	///< Required element.
/// Element "QsoAddArray" of type "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfQso.
    contest25__ArrayOfQso*               QsoAddArray                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "OldState" of type xs:int.
    int                                  OldState                       1;	///< Required element.
/// Element "MaxRequested" of type xs:int.
    int                                  MaxRequested                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "urn:ContestQsos2":AddAndGetLogSummaryResponse
/// @brief "urn:ContestQsos2":AddAndGetLogSummaryResponse is a complexType.
///
/// @note class _contest23__AddAndGetLogSummaryResponse operations:
/// - _contest23__AddAndGetLogSummaryResponse* soap_new__contest23__AddAndGetLogSummaryResponse(soap*) allocate and default initialize
/// - _contest23__AddAndGetLogSummaryResponse* soap_new__contest23__AddAndGetLogSummaryResponse(soap*, int num) allocate and default initialize an array
/// - _contest23__AddAndGetLogSummaryResponse* soap_new_req__contest23__AddAndGetLogSummaryResponse(soap*, ...) allocate, set required members
/// - _contest23__AddAndGetLogSummaryResponse* soap_new_set__contest23__AddAndGetLogSummaryResponse(soap*, ...) allocate, set all public members
/// - _contest23__AddAndGetLogSummaryResponse::soap_default(soap*) default initialize members
/// - int soap_read__contest23__AddAndGetLogSummaryResponse(soap*, _contest23__AddAndGetLogSummaryResponse*) deserialize from a stream
/// - int soap_write__contest23__AddAndGetLogSummaryResponse(soap*, _contest23__AddAndGetLogSummaryResponse*) serialize to a stream
/// - _contest23__AddAndGetLogSummaryResponse* _contest23__AddAndGetLogSummaryResponse::soap_dup(soap*) returns deep copy of _contest23__AddAndGetLogSummaryResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _contest23__AddAndGetLogSummaryResponse::soap_del() deep deletes _contest23__AddAndGetLogSummaryResponse data members, use only after _contest23__AddAndGetLogSummaryResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _contest23__AddAndGetLogSummaryResponse::soap_type() returns SOAP_TYPE__contest23__AddAndGetLogSummaryResponse or derived type identifier
class _contest23__AddAndGetLogSummaryResponse
{ public:
/// Element "AddAndGetLogSummaryResult" of type "http://schemas.datacontract.org/2004/07/ContestQsos":LogSummary.
    contest25__LogSummary*               AddAndGetLogSummaryResult      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "urn:ContestQsos2":getQsosByKeyArray
/// @brief "urn:ContestQsos2":getQsosByKeyArray is a complexType.
///
/// @note class _contest23__getQsosByKeyArray operations:
/// - _contest23__getQsosByKeyArray* soap_new__contest23__getQsosByKeyArray(soap*) allocate and default initialize
/// - _contest23__getQsosByKeyArray* soap_new__contest23__getQsosByKeyArray(soap*, int num) allocate and default initialize an array
/// - _contest23__getQsosByKeyArray* soap_new_req__contest23__getQsosByKeyArray(soap*, ...) allocate, set required members
/// - _contest23__getQsosByKeyArray* soap_new_set__contest23__getQsosByKeyArray(soap*, ...) allocate, set all public members
/// - _contest23__getQsosByKeyArray::soap_default(soap*) default initialize members
/// - int soap_read__contest23__getQsosByKeyArray(soap*, _contest23__getQsosByKeyArray*) deserialize from a stream
/// - int soap_write__contest23__getQsosByKeyArray(soap*, _contest23__getQsosByKeyArray*) serialize to a stream
/// - _contest23__getQsosByKeyArray* _contest23__getQsosByKeyArray::soap_dup(soap*) returns deep copy of _contest23__getQsosByKeyArray, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _contest23__getQsosByKeyArray::soap_del() deep deletes _contest23__getQsosByKeyArray data members, use only after _contest23__getQsosByKeyArray::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _contest23__getQsosByKeyArray::soap_type() returns SOAP_TYPE__contest23__getQsosByKeyArray or derived type identifier
class _contest23__getQsosByKeyArray
{ public:
/// Element "SessionId" of type xs:string.
    std::string                          SessionId                      1;	///< Required element.
/// Element "QsoKeyArray" of type "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfstring.
    contest26__ArrayOfstring*            QsoKeyArray                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "urn:ContestQsos2":getQsosByKeyArrayResponse
/// @brief "urn:ContestQsos2":getQsosByKeyArrayResponse is a complexType.
///
/// @note class _contest23__getQsosByKeyArrayResponse operations:
/// - _contest23__getQsosByKeyArrayResponse* soap_new__contest23__getQsosByKeyArrayResponse(soap*) allocate and default initialize
/// - _contest23__getQsosByKeyArrayResponse* soap_new__contest23__getQsosByKeyArrayResponse(soap*, int num) allocate and default initialize an array
/// - _contest23__getQsosByKeyArrayResponse* soap_new_req__contest23__getQsosByKeyArrayResponse(soap*, ...) allocate, set required members
/// - _contest23__getQsosByKeyArrayResponse* soap_new_set__contest23__getQsosByKeyArrayResponse(soap*, ...) allocate, set all public members
/// - _contest23__getQsosByKeyArrayResponse::soap_default(soap*) default initialize members
/// - int soap_read__contest23__getQsosByKeyArrayResponse(soap*, _contest23__getQsosByKeyArrayResponse*) deserialize from a stream
/// - int soap_write__contest23__getQsosByKeyArrayResponse(soap*, _contest23__getQsosByKeyArrayResponse*) serialize to a stream
/// - _contest23__getQsosByKeyArrayResponse* _contest23__getQsosByKeyArrayResponse::soap_dup(soap*) returns deep copy of _contest23__getQsosByKeyArrayResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _contest23__getQsosByKeyArrayResponse::soap_del() deep deletes _contest23__getQsosByKeyArrayResponse data members, use only after _contest23__getQsosByKeyArrayResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _contest23__getQsosByKeyArrayResponse::soap_type() returns SOAP_TYPE__contest23__getQsosByKeyArrayResponse or derived type identifier
class _contest23__getQsosByKeyArrayResponse
{ public:
/// Element "getQsosByKeyArrayResult" of type "http://schemas.datacontract.org/2004/07/ContestQsos":QsoUpdate.
    contest25__QsoUpdate*                getQsosByKeyArrayResult        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "urn:ContestQsos2":ColumnNamesToIndices
/// @brief "urn:ContestQsos2":ColumnNamesToIndices is a complexType.
///
/// @note class _contest23__ColumnNamesToIndices operations:
/// - _contest23__ColumnNamesToIndices* soap_new__contest23__ColumnNamesToIndices(soap*) allocate and default initialize
/// - _contest23__ColumnNamesToIndices* soap_new__contest23__ColumnNamesToIndices(soap*, int num) allocate and default initialize an array
/// - _contest23__ColumnNamesToIndices* soap_new_req__contest23__ColumnNamesToIndices(soap*, ...) allocate, set required members
/// - _contest23__ColumnNamesToIndices* soap_new_set__contest23__ColumnNamesToIndices(soap*, ...) allocate, set all public members
/// - _contest23__ColumnNamesToIndices::soap_default(soap*) default initialize members
/// - int soap_read__contest23__ColumnNamesToIndices(soap*, _contest23__ColumnNamesToIndices*) deserialize from a stream
/// - int soap_write__contest23__ColumnNamesToIndices(soap*, _contest23__ColumnNamesToIndices*) serialize to a stream
/// - _contest23__ColumnNamesToIndices* _contest23__ColumnNamesToIndices::soap_dup(soap*) returns deep copy of _contest23__ColumnNamesToIndices, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _contest23__ColumnNamesToIndices::soap_del() deep deletes _contest23__ColumnNamesToIndices data members, use only after _contest23__ColumnNamesToIndices::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _contest23__ColumnNamesToIndices::soap_type() returns SOAP_TYPE__contest23__ColumnNamesToIndices or derived type identifier
class _contest23__ColumnNamesToIndices
{ public:
/// Element "SessionId" of type xs:string.
    std::string                          SessionId                      1;	///< Required element.
/// Element "ColumnNames" of type "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfstring.
    contest26__ArrayOfstring*            ColumnNames                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "urn:ContestQsos2":ColumnNamesToIndicesResponse
/// @brief "urn:ContestQsos2":ColumnNamesToIndicesResponse is a complexType.
///
/// @note class _contest23__ColumnNamesToIndicesResponse operations:
/// - _contest23__ColumnNamesToIndicesResponse* soap_new__contest23__ColumnNamesToIndicesResponse(soap*) allocate and default initialize
/// - _contest23__ColumnNamesToIndicesResponse* soap_new__contest23__ColumnNamesToIndicesResponse(soap*, int num) allocate and default initialize an array
/// - _contest23__ColumnNamesToIndicesResponse* soap_new_req__contest23__ColumnNamesToIndicesResponse(soap*, ...) allocate, set required members
/// - _contest23__ColumnNamesToIndicesResponse* soap_new_set__contest23__ColumnNamesToIndicesResponse(soap*, ...) allocate, set all public members
/// - _contest23__ColumnNamesToIndicesResponse::soap_default(soap*) default initialize members
/// - int soap_read__contest23__ColumnNamesToIndicesResponse(soap*, _contest23__ColumnNamesToIndicesResponse*) deserialize from a stream
/// - int soap_write__contest23__ColumnNamesToIndicesResponse(soap*, _contest23__ColumnNamesToIndicesResponse*) serialize to a stream
/// - _contest23__ColumnNamesToIndicesResponse* _contest23__ColumnNamesToIndicesResponse::soap_dup(soap*) returns deep copy of _contest23__ColumnNamesToIndicesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _contest23__ColumnNamesToIndicesResponse::soap_del() deep deletes _contest23__ColumnNamesToIndicesResponse data members, use only after _contest23__ColumnNamesToIndicesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _contest23__ColumnNamesToIndicesResponse::soap_type() returns SOAP_TYPE__contest23__ColumnNamesToIndicesResponse or derived type identifier
class _contest23__ColumnNamesToIndicesResponse
{ public:
/// Element "ColumnNamesToIndicesResult" of type "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfint.
    contest26__ArrayOfint*               ColumnNamesToIndicesResult     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "urn:ContestQsos2":ExchangeFrequencies
/// @brief "urn:ContestQsos2":ExchangeFrequencies is a complexType.
///
/// @note class _contest23__ExchangeFrequencies operations:
/// - _contest23__ExchangeFrequencies* soap_new__contest23__ExchangeFrequencies(soap*) allocate and default initialize
/// - _contest23__ExchangeFrequencies* soap_new__contest23__ExchangeFrequencies(soap*, int num) allocate and default initialize an array
/// - _contest23__ExchangeFrequencies* soap_new_req__contest23__ExchangeFrequencies(soap*, ...) allocate, set required members
/// - _contest23__ExchangeFrequencies* soap_new_set__contest23__ExchangeFrequencies(soap*, ...) allocate, set all public members
/// - _contest23__ExchangeFrequencies::soap_default(soap*) default initialize members
/// - int soap_read__contest23__ExchangeFrequencies(soap*, _contest23__ExchangeFrequencies*) deserialize from a stream
/// - int soap_write__contest23__ExchangeFrequencies(soap*, _contest23__ExchangeFrequencies*) serialize to a stream
/// - _contest23__ExchangeFrequencies* _contest23__ExchangeFrequencies::soap_dup(soap*) returns deep copy of _contest23__ExchangeFrequencies, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _contest23__ExchangeFrequencies::soap_del() deep deletes _contest23__ExchangeFrequencies data members, use only after _contest23__ExchangeFrequencies::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _contest23__ExchangeFrequencies::soap_type() returns SOAP_TYPE__contest23__ExchangeFrequencies or derived type identifier
class _contest23__ExchangeFrequencies
{ public:
/// Element "IncomingFreqs" of type "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfRigFrequency.
    contest25__ArrayOfRigFrequency*      IncomingFreqs                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "urn:ContestQsos2":ExchangeFrequenciesResponse
/// @brief "urn:ContestQsos2":ExchangeFrequenciesResponse is a complexType.
///
/// @note class _contest23__ExchangeFrequenciesResponse operations:
/// - _contest23__ExchangeFrequenciesResponse* soap_new__contest23__ExchangeFrequenciesResponse(soap*) allocate and default initialize
/// - _contest23__ExchangeFrequenciesResponse* soap_new__contest23__ExchangeFrequenciesResponse(soap*, int num) allocate and default initialize an array
/// - _contest23__ExchangeFrequenciesResponse* soap_new_req__contest23__ExchangeFrequenciesResponse(soap*, ...) allocate, set required members
/// - _contest23__ExchangeFrequenciesResponse* soap_new_set__contest23__ExchangeFrequenciesResponse(soap*, ...) allocate, set all public members
/// - _contest23__ExchangeFrequenciesResponse::soap_default(soap*) default initialize members
/// - int soap_read__contest23__ExchangeFrequenciesResponse(soap*, _contest23__ExchangeFrequenciesResponse*) deserialize from a stream
/// - int soap_write__contest23__ExchangeFrequenciesResponse(soap*, _contest23__ExchangeFrequenciesResponse*) serialize to a stream
/// - _contest23__ExchangeFrequenciesResponse* _contest23__ExchangeFrequenciesResponse::soap_dup(soap*) returns deep copy of _contest23__ExchangeFrequenciesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _contest23__ExchangeFrequenciesResponse::soap_del() deep deletes _contest23__ExchangeFrequenciesResponse data members, use only after _contest23__ExchangeFrequenciesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _contest23__ExchangeFrequenciesResponse::soap_type() returns SOAP_TYPE__contest23__ExchangeFrequenciesResponse or derived type identifier
class _contest23__ExchangeFrequenciesResponse
{ public:
/// Element "ExchangeFrequenciesResult" of type "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfRigFrequency.
    contest25__ArrayOfRigFrequency*      ExchangeFrequenciesResult      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   urn:ContestQsos2/Imports                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://schemas.microsoft.com/2003/10/Serialization/Arrays                *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfstring of type "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfstring.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfint of type "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfint.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://schemas.microsoft.com/2003/10/Serialization/Arrays                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":anyType of type xs:anyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":anyURI of type xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":base64Binary of type xs:base64Binary.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":boolean of type xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":byte of type xs:byte.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":dateTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":decimal of type xs:decimal.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":double of type xs:double.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":float of type xs:float.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":int of type xs:int.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":long of type xs:long.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":QName of type xs:QName.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":short of type xs:short.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":string of type xs:string.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedByte of type xs:unsignedByte.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedInt of type xs:unsignedInt.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedLong of type xs:unsignedLong.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedShort of type xs:unsignedShort.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":char of type "http://schemas.microsoft.com/2003/10/Serialization/":char.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":duration of type "http://schemas.microsoft.com/2003/10/Serialization/":duration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":guid of type "http://schemas.microsoft.com/2003/10/Serialization/":guid.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":FactoryType of simpleType xs:QName.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.

/// @brief Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":Id of simpleType xs:ID.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.

/// @brief Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":Ref of simpleType xs:IDREF.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://schemas.datacontract.org/2004/07/ContestQsos                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfQso of type "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfQso.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/ContestQsos":Qso of type "http://schemas.datacontract.org/2004/07/ContestQsos":Qso.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/ContestQsos":QsoUpdate of type "http://schemas.datacontract.org/2004/07/ContestQsos":QsoUpdate.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/ContestQsos":LogSummary of type "http://schemas.datacontract.org/2004/07/ContestQsos":LogSummary.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfQsoIdVersion of type "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfQsoIdVersion.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/ContestQsos":QsoIdVersion of type "http://schemas.datacontract.org/2004/07/ContestQsos":QsoIdVersion.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfRigFrequency of type "http://schemas.datacontract.org/2004/07/ContestQsos":ArrayOfRigFrequency.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/ContestQsos":RigFrequency of type "http://schemas.datacontract.org/2004/07/ContestQsos":RigFrequency.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://schemas.datacontract.org/2004/07/ContestQsos                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   urn:ContestQsos2                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   urn:ContestQsos2                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   urn:ContestQsos2/Imports                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   urn:ContestQsos2/Imports                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap contest23 service name:	DefaultBinding_USCOREIContestQsos 
//gsoap contest23 service type:	IContestQsos 
//gsoap contest23 service namespace:	urn:ContestQsos2 
//gsoap contest23 service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref DefaultBinding_USCOREIContestQsos

@section Service_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/** @page DefaultBinding_USCOREIContestQsos Binding "DefaultBinding_USCOREIContestQsos"

@section DefaultBinding_USCOREIContestQsos_operations Operations of Binding "DefaultBinding_USCOREIContestQsos"

  - @ref __contest23__GetSessionId

  - @ref __contest23__addAndGetQsos

  - @ref __contest23__AddAndGetLogSummary

  - @ref __contest23__getQsosByKeyArray

  - @ref __contest23__ColumnNamesToIndices

  - @ref __contest23__ExchangeFrequencies

@section DefaultBinding_USCOREIContestQsos_ports Default endpoints of Binding "DefaultBinding_USCOREIContestQsos"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DefaultBinding_USCOREIContestQsos                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __contest23__GetSessionId                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__contest23__GetSessionId" of service binding "DefaultBinding_USCOREIContestQsos".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "urn:ContestQsos2/IContestQsos/GetSessionId"

  - Addressing input action: "urn:ContestQsos2/IContestQsos/GetSessionId"

  - Addressing output action: "urn:ContestQsos2/IContestQsos/GetSessionIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___contest23__GetSessionId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _contest23__GetSessionId*           contest23__GetSessionId,
    // output parameters:
    _contest23__GetSessionIdResponse   &contest23__GetSessionIdResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __contest23__GetSessionId(
    struct soap *soap,
    // input parameters:
    _contest23__GetSessionId*           contest23__GetSessionId,
    // output parameters:
    _contest23__GetSessionIdResponse   &contest23__GetSessionIdResponse
  );
@endcode

C++ proxy class (defined in soapDefaultBinding_USCOREIContestQsosProxy.h generated with soapcpp2):
@code
  class DefaultBinding_USCOREIContestQsosProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDefaultBinding_USCOREIContestQsosService.h generated with soapcpp2):
@code
  class DefaultBinding_USCOREIContestQsosService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap contest23 service method-protocol:	GetSessionId SOAP
//gsoap contest23 service method-style:	GetSessionId document
//gsoap contest23 service method-encoding:	GetSessionId literal
//gsoap contest23 service method-input-action:	GetSessionId urn:ContestQsos2/IContestQsos/GetSessionId
//gsoap contest23 service method-output-action:	GetSessionId urn:ContestQsos2/IContestQsos/GetSessionIdResponse
int __contest23__GetSessionId(
    _contest23__GetSessionId*           contest23__GetSessionId,	///< Input parameter
    _contest23__GetSessionIdResponse   &contest23__GetSessionIdResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __contest23__addAndGetQsos                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__contest23__addAndGetQsos" of service binding "DefaultBinding_USCOREIContestQsos".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "urn:ContestQsos2/IContestQsos/addAndGetQsos"

  - Addressing input action: "urn:ContestQsos2/IContestQsos/addAndGetQsos"

  - Addressing output action: "urn:ContestQsos2/IContestQsos/addAndGetQsosResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___contest23__addAndGetQsos(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _contest23__addAndGetQsos*          contest23__addAndGetQsos,
    // output parameters:
    _contest23__addAndGetQsosResponse  &contest23__addAndGetQsosResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __contest23__addAndGetQsos(
    struct soap *soap,
    // input parameters:
    _contest23__addAndGetQsos*          contest23__addAndGetQsos,
    // output parameters:
    _contest23__addAndGetQsosResponse  &contest23__addAndGetQsosResponse
  );
@endcode

C++ proxy class (defined in soapDefaultBinding_USCOREIContestQsosProxy.h generated with soapcpp2):
@code
  class DefaultBinding_USCOREIContestQsosProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDefaultBinding_USCOREIContestQsosService.h generated with soapcpp2):
@code
  class DefaultBinding_USCOREIContestQsosService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap contest23 service method-protocol:	addAndGetQsos SOAP
//gsoap contest23 service method-style:	addAndGetQsos document
//gsoap contest23 service method-encoding:	addAndGetQsos literal
//gsoap contest23 service method-input-action:	addAndGetQsos urn:ContestQsos2/IContestQsos/addAndGetQsos
//gsoap contest23 service method-output-action:	addAndGetQsos urn:ContestQsos2/IContestQsos/addAndGetQsosResponse
int __contest23__addAndGetQsos(
    _contest23__addAndGetQsos*          contest23__addAndGetQsos,	///< Input parameter
    _contest23__addAndGetQsosResponse  &contest23__addAndGetQsosResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __contest23__AddAndGetLogSummary                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__contest23__AddAndGetLogSummary" of service binding "DefaultBinding_USCOREIContestQsos".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "urn:ContestQsos2/IContestQsos/AddAndGetLogSummary"

  - Addressing input action: "urn:ContestQsos2/IContestQsos/AddAndGetLogSummary"

  - Addressing output action: "urn:ContestQsos2/IContestQsos/AddAndGetLogSummaryResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___contest23__AddAndGetLogSummary(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _contest23__AddAndGetLogSummary*    contest23__AddAndGetLogSummary,
    // output parameters:
    _contest23__AddAndGetLogSummaryResponse&contest23__AddAndGetLogSummaryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __contest23__AddAndGetLogSummary(
    struct soap *soap,
    // input parameters:
    _contest23__AddAndGetLogSummary*    contest23__AddAndGetLogSummary,
    // output parameters:
    _contest23__AddAndGetLogSummaryResponse&contest23__AddAndGetLogSummaryResponse
  );
@endcode

C++ proxy class (defined in soapDefaultBinding_USCOREIContestQsosProxy.h generated with soapcpp2):
@code
  class DefaultBinding_USCOREIContestQsosProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDefaultBinding_USCOREIContestQsosService.h generated with soapcpp2):
@code
  class DefaultBinding_USCOREIContestQsosService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap contest23 service method-protocol:	AddAndGetLogSummary SOAP
//gsoap contest23 service method-style:	AddAndGetLogSummary document
//gsoap contest23 service method-encoding:	AddAndGetLogSummary literal
//gsoap contest23 service method-input-action:	AddAndGetLogSummary urn:ContestQsos2/IContestQsos/AddAndGetLogSummary
//gsoap contest23 service method-output-action:	AddAndGetLogSummary urn:ContestQsos2/IContestQsos/AddAndGetLogSummaryResponse
int __contest23__AddAndGetLogSummary(
    _contest23__AddAndGetLogSummary*    contest23__AddAndGetLogSummary,	///< Input parameter
    _contest23__AddAndGetLogSummaryResponse&contest23__AddAndGetLogSummaryResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __contest23__getQsosByKeyArray                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__contest23__getQsosByKeyArray" of service binding "DefaultBinding_USCOREIContestQsos".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "urn:ContestQsos2/IContestQsos/getQsosByKeyArray"

  - Addressing input action: "urn:ContestQsos2/IContestQsos/getQsosByKeyArray"

  - Addressing output action: "urn:ContestQsos2/IContestQsos/getQsosByKeyArrayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___contest23__getQsosByKeyArray(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _contest23__getQsosByKeyArray*      contest23__getQsosByKeyArray,
    // output parameters:
    _contest23__getQsosByKeyArrayResponse&contest23__getQsosByKeyArrayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __contest23__getQsosByKeyArray(
    struct soap *soap,
    // input parameters:
    _contest23__getQsosByKeyArray*      contest23__getQsosByKeyArray,
    // output parameters:
    _contest23__getQsosByKeyArrayResponse&contest23__getQsosByKeyArrayResponse
  );
@endcode

C++ proxy class (defined in soapDefaultBinding_USCOREIContestQsosProxy.h generated with soapcpp2):
@code
  class DefaultBinding_USCOREIContestQsosProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDefaultBinding_USCOREIContestQsosService.h generated with soapcpp2):
@code
  class DefaultBinding_USCOREIContestQsosService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap contest23 service method-protocol:	getQsosByKeyArray SOAP
//gsoap contest23 service method-style:	getQsosByKeyArray document
//gsoap contest23 service method-encoding:	getQsosByKeyArray literal
//gsoap contest23 service method-input-action:	getQsosByKeyArray urn:ContestQsos2/IContestQsos/getQsosByKeyArray
//gsoap contest23 service method-output-action:	getQsosByKeyArray urn:ContestQsos2/IContestQsos/getQsosByKeyArrayResponse
int __contest23__getQsosByKeyArray(
    _contest23__getQsosByKeyArray*      contest23__getQsosByKeyArray,	///< Input parameter
    _contest23__getQsosByKeyArrayResponse&contest23__getQsosByKeyArrayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __contest23__ColumnNamesToIndices                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__contest23__ColumnNamesToIndices" of service binding "DefaultBinding_USCOREIContestQsos".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "urn:ContestQsos2/IContestQsos/ColumnNamesToIndices"

  - Addressing input action: "urn:ContestQsos2/IContestQsos/ColumnNamesToIndices"

  - Addressing output action: "urn:ContestQsos2/IContestQsos/ColumnNamesToIndicesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___contest23__ColumnNamesToIndices(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _contest23__ColumnNamesToIndices*   contest23__ColumnNamesToIndices,
    // output parameters:
    _contest23__ColumnNamesToIndicesResponse&contest23__ColumnNamesToIndicesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __contest23__ColumnNamesToIndices(
    struct soap *soap,
    // input parameters:
    _contest23__ColumnNamesToIndices*   contest23__ColumnNamesToIndices,
    // output parameters:
    _contest23__ColumnNamesToIndicesResponse&contest23__ColumnNamesToIndicesResponse
  );
@endcode

C++ proxy class (defined in soapDefaultBinding_USCOREIContestQsosProxy.h generated with soapcpp2):
@code
  class DefaultBinding_USCOREIContestQsosProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDefaultBinding_USCOREIContestQsosService.h generated with soapcpp2):
@code
  class DefaultBinding_USCOREIContestQsosService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap contest23 service method-protocol:	ColumnNamesToIndices SOAP
//gsoap contest23 service method-style:	ColumnNamesToIndices document
//gsoap contest23 service method-encoding:	ColumnNamesToIndices literal
//gsoap contest23 service method-input-action:	ColumnNamesToIndices urn:ContestQsos2/IContestQsos/ColumnNamesToIndices
//gsoap contest23 service method-output-action:	ColumnNamesToIndices urn:ContestQsos2/IContestQsos/ColumnNamesToIndicesResponse
int __contest23__ColumnNamesToIndices(
    _contest23__ColumnNamesToIndices*   contest23__ColumnNamesToIndices,	///< Input parameter
    _contest23__ColumnNamesToIndicesResponse&contest23__ColumnNamesToIndicesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __contest23__ExchangeFrequencies                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__contest23__ExchangeFrequencies" of service binding "DefaultBinding_USCOREIContestQsos".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "urn:ContestQsos2/IContestQsos/ExchangeFrequencies"

  - Addressing input action: "urn:ContestQsos2/IContestQsos/ExchangeFrequencies"

  - Addressing output action: "urn:ContestQsos2/IContestQsos/ExchangeFrequenciesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___contest23__ExchangeFrequencies(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _contest23__ExchangeFrequencies*    contest23__ExchangeFrequencies,
    // output parameters:
    _contest23__ExchangeFrequenciesResponse&contest23__ExchangeFrequenciesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __contest23__ExchangeFrequencies(
    struct soap *soap,
    // input parameters:
    _contest23__ExchangeFrequencies*    contest23__ExchangeFrequencies,
    // output parameters:
    _contest23__ExchangeFrequenciesResponse&contest23__ExchangeFrequenciesResponse
  );
@endcode

C++ proxy class (defined in soapDefaultBinding_USCOREIContestQsosProxy.h generated with soapcpp2):
@code
  class DefaultBinding_USCOREIContestQsosProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDefaultBinding_USCOREIContestQsosService.h generated with soapcpp2):
@code
  class DefaultBinding_USCOREIContestQsosService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap contest23 service method-protocol:	ExchangeFrequencies SOAP
//gsoap contest23 service method-style:	ExchangeFrequencies document
//gsoap contest23 service method-encoding:	ExchangeFrequencies literal
//gsoap contest23 service method-input-action:	ExchangeFrequencies urn:ContestQsos2/IContestQsos/ExchangeFrequencies
//gsoap contest23 service method-output-action:	ExchangeFrequencies urn:ContestQsos2/IContestQsos/ExchangeFrequenciesResponse
int __contest23__ExchangeFrequencies(
    _contest23__ExchangeFrequencies*    contest23__ExchangeFrequencies,	///< Input parameter
    _contest23__ExchangeFrequenciesResponse&contest23__ExchangeFrequenciesResponse	///< Output parameter
);

/** @page DefaultBinding_USCOREIContestQsos Binding "DefaultBinding_USCOREIContestQsos"

@section DefaultBinding_USCOREIContestQsos_policy_enablers Policy Enablers of Binding "DefaultBinding_USCOREIContestQsos"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/** @page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings that are contractually bound by WSDLs and
are auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data
bindings are adopted from XML schemas as part of the WSDL types section or when
running wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

@note The following readers and writers are C/C++ data type (de)serializers
auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

@note Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

@note Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

@note The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_set_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_set_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


*/

/**

@section contest26 Top-level root elements of schema "http://schemas.microsoft.com/2003/10/Serialization/Arrays"

  - <contest26:ArrayOfstring> (use wsdl2h option -g to auto-generate type _contest26__ArrayOfstring)

  - <contest26:ArrayOfint> (use wsdl2h option -g to auto-generate type _contest26__ArrayOfint)

*/

/**

@section contest24 Top-level root elements of schema "http://schemas.microsoft.com/2003/10/Serialization/"

  - <contest24:anyType> (use wsdl2h option -g to auto-generate type _contest24__anyType)

  - <contest24:anyURI> (use wsdl2h option -g to auto-generate type _contest24__anyURI)

  - <contest24:base64Binary> (use wsdl2h option -g to auto-generate type _contest24__base64Binary)

  - <contest24:boolean> (use wsdl2h option -g to auto-generate type _contest24__boolean)

  - <contest24:byte> (use wsdl2h option -g to auto-generate type _contest24__byte)

  - <contest24:dateTime> (use wsdl2h option -g to auto-generate type _contest24__dateTime)

  - <contest24:decimal> (use wsdl2h option -g to auto-generate type _contest24__decimal)

  - <contest24:double> (use wsdl2h option -g to auto-generate type _contest24__double)

  - <contest24:float> (use wsdl2h option -g to auto-generate type _contest24__float)

  - <contest24:int> (use wsdl2h option -g to auto-generate type _contest24__int)

  - <contest24:long> (use wsdl2h option -g to auto-generate type _contest24__long)

  - <contest24:QName> (use wsdl2h option -g to auto-generate type _contest24__QName)

  - <contest24:short> (use wsdl2h option -g to auto-generate type _contest24__short)

  - <contest24:string> (use wsdl2h option -g to auto-generate type _contest24__string)

  - <contest24:unsignedByte> (use wsdl2h option -g to auto-generate type _contest24__unsignedByte)

  - <contest24:unsignedInt> (use wsdl2h option -g to auto-generate type _contest24__unsignedInt)

  - <contest24:unsignedLong> (use wsdl2h option -g to auto-generate type _contest24__unsignedLong)

  - <contest24:unsignedShort> (use wsdl2h option -g to auto-generate type _contest24__unsignedShort)

  - <contest24:char> (use wsdl2h option -g to auto-generate type _contest24__char)

  - <contest24:duration> (use wsdl2h option -g to auto-generate type _contest24__duration)

  - <contest24:guid> (use wsdl2h option -g to auto-generate type _contest24__guid)

*/

/**

@section contest25 Top-level root elements of schema "http://schemas.datacontract.org/2004/07/ContestQsos"

  - <contest25:ArrayOfQso> (use wsdl2h option -g to auto-generate type _contest25__ArrayOfQso)

  - <contest25:Qso> (use wsdl2h option -g to auto-generate type _contest25__Qso)

  - <contest25:QsoUpdate> (use wsdl2h option -g to auto-generate type _contest25__QsoUpdate)

  - <contest25:LogSummary> (use wsdl2h option -g to auto-generate type _contest25__LogSummary)

  - <contest25:ArrayOfQsoIdVersion> (use wsdl2h option -g to auto-generate type _contest25__ArrayOfQsoIdVersion)

  - <contest25:QsoIdVersion> (use wsdl2h option -g to auto-generate type _contest25__QsoIdVersion)

  - <contest25:ArrayOfRigFrequency> (use wsdl2h option -g to auto-generate type _contest25__ArrayOfRigFrequency)

  - <contest25:RigFrequency> (use wsdl2h option -g to auto-generate type _contest25__RigFrequency)

*/

/**

@section contest23 Top-level root elements of schema "urn:ContestQsos2"

  - <contest23:GetSessionId> @ref _contest23__GetSessionId
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__contest23__GetSessionId(struct soap*, _contest23__GetSessionId*);
    // Writer (returns SOAP_OK on success):
    soap_write__contest23__GetSessionId(struct soap*, _contest23__GetSessionId*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__contest23__GetSessionId(struct soap*, const char *URL, _contest23__GetSessionId*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__contest23__GetSessionId(struct soap*, const char *URL, _contest23__GetSessionId*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__contest23__GetSessionId(struct soap*, const char *URL, _contest23__GetSessionId*);
    soap_POST_recv__contest23__GetSessionId(struct soap*, _contest23__GetSessionId*);
    @endcode

  - <contest23:GetSessionIdResponse> @ref _contest23__GetSessionIdResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__contest23__GetSessionIdResponse(struct soap*, _contest23__GetSessionIdResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__contest23__GetSessionIdResponse(struct soap*, _contest23__GetSessionIdResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__contest23__GetSessionIdResponse(struct soap*, const char *URL, _contest23__GetSessionIdResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__contest23__GetSessionIdResponse(struct soap*, const char *URL, _contest23__GetSessionIdResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__contest23__GetSessionIdResponse(struct soap*, const char *URL, _contest23__GetSessionIdResponse*);
    soap_POST_recv__contest23__GetSessionIdResponse(struct soap*, _contest23__GetSessionIdResponse*);
    @endcode

  - <contest23:addAndGetQsos> @ref _contest23__addAndGetQsos
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__contest23__addAndGetQsos(struct soap*, _contest23__addAndGetQsos*);
    // Writer (returns SOAP_OK on success):
    soap_write__contest23__addAndGetQsos(struct soap*, _contest23__addAndGetQsos*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__contest23__addAndGetQsos(struct soap*, const char *URL, _contest23__addAndGetQsos*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__contest23__addAndGetQsos(struct soap*, const char *URL, _contest23__addAndGetQsos*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__contest23__addAndGetQsos(struct soap*, const char *URL, _contest23__addAndGetQsos*);
    soap_POST_recv__contest23__addAndGetQsos(struct soap*, _contest23__addAndGetQsos*);
    @endcode

  - <contest23:addAndGetQsosResponse> @ref _contest23__addAndGetQsosResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__contest23__addAndGetQsosResponse(struct soap*, _contest23__addAndGetQsosResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__contest23__addAndGetQsosResponse(struct soap*, _contest23__addAndGetQsosResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__contest23__addAndGetQsosResponse(struct soap*, const char *URL, _contest23__addAndGetQsosResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__contest23__addAndGetQsosResponse(struct soap*, const char *URL, _contest23__addAndGetQsosResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__contest23__addAndGetQsosResponse(struct soap*, const char *URL, _contest23__addAndGetQsosResponse*);
    soap_POST_recv__contest23__addAndGetQsosResponse(struct soap*, _contest23__addAndGetQsosResponse*);
    @endcode

  - <contest23:AddAndGetLogSummary> @ref _contest23__AddAndGetLogSummary
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__contest23__AddAndGetLogSummary(struct soap*, _contest23__AddAndGetLogSummary*);
    // Writer (returns SOAP_OK on success):
    soap_write__contest23__AddAndGetLogSummary(struct soap*, _contest23__AddAndGetLogSummary*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__contest23__AddAndGetLogSummary(struct soap*, const char *URL, _contest23__AddAndGetLogSummary*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__contest23__AddAndGetLogSummary(struct soap*, const char *URL, _contest23__AddAndGetLogSummary*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__contest23__AddAndGetLogSummary(struct soap*, const char *URL, _contest23__AddAndGetLogSummary*);
    soap_POST_recv__contest23__AddAndGetLogSummary(struct soap*, _contest23__AddAndGetLogSummary*);
    @endcode

  - <contest23:AddAndGetLogSummaryResponse> @ref _contest23__AddAndGetLogSummaryResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__contest23__AddAndGetLogSummaryResponse(struct soap*, _contest23__AddAndGetLogSummaryResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__contest23__AddAndGetLogSummaryResponse(struct soap*, _contest23__AddAndGetLogSummaryResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__contest23__AddAndGetLogSummaryResponse(struct soap*, const char *URL, _contest23__AddAndGetLogSummaryResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__contest23__AddAndGetLogSummaryResponse(struct soap*, const char *URL, _contest23__AddAndGetLogSummaryResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__contest23__AddAndGetLogSummaryResponse(struct soap*, const char *URL, _contest23__AddAndGetLogSummaryResponse*);
    soap_POST_recv__contest23__AddAndGetLogSummaryResponse(struct soap*, _contest23__AddAndGetLogSummaryResponse*);
    @endcode

  - <contest23:getQsosByKeyArray> @ref _contest23__getQsosByKeyArray
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__contest23__getQsosByKeyArray(struct soap*, _contest23__getQsosByKeyArray*);
    // Writer (returns SOAP_OK on success):
    soap_write__contest23__getQsosByKeyArray(struct soap*, _contest23__getQsosByKeyArray*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__contest23__getQsosByKeyArray(struct soap*, const char *URL, _contest23__getQsosByKeyArray*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__contest23__getQsosByKeyArray(struct soap*, const char *URL, _contest23__getQsosByKeyArray*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__contest23__getQsosByKeyArray(struct soap*, const char *URL, _contest23__getQsosByKeyArray*);
    soap_POST_recv__contest23__getQsosByKeyArray(struct soap*, _contest23__getQsosByKeyArray*);
    @endcode

  - <contest23:getQsosByKeyArrayResponse> @ref _contest23__getQsosByKeyArrayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__contest23__getQsosByKeyArrayResponse(struct soap*, _contest23__getQsosByKeyArrayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__contest23__getQsosByKeyArrayResponse(struct soap*, _contest23__getQsosByKeyArrayResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__contest23__getQsosByKeyArrayResponse(struct soap*, const char *URL, _contest23__getQsosByKeyArrayResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__contest23__getQsosByKeyArrayResponse(struct soap*, const char *URL, _contest23__getQsosByKeyArrayResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__contest23__getQsosByKeyArrayResponse(struct soap*, const char *URL, _contest23__getQsosByKeyArrayResponse*);
    soap_POST_recv__contest23__getQsosByKeyArrayResponse(struct soap*, _contest23__getQsosByKeyArrayResponse*);
    @endcode

  - <contest23:ColumnNamesToIndices> @ref _contest23__ColumnNamesToIndices
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__contest23__ColumnNamesToIndices(struct soap*, _contest23__ColumnNamesToIndices*);
    // Writer (returns SOAP_OK on success):
    soap_write__contest23__ColumnNamesToIndices(struct soap*, _contest23__ColumnNamesToIndices*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__contest23__ColumnNamesToIndices(struct soap*, const char *URL, _contest23__ColumnNamesToIndices*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__contest23__ColumnNamesToIndices(struct soap*, const char *URL, _contest23__ColumnNamesToIndices*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__contest23__ColumnNamesToIndices(struct soap*, const char *URL, _contest23__ColumnNamesToIndices*);
    soap_POST_recv__contest23__ColumnNamesToIndices(struct soap*, _contest23__ColumnNamesToIndices*);
    @endcode

  - <contest23:ColumnNamesToIndicesResponse> @ref _contest23__ColumnNamesToIndicesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__contest23__ColumnNamesToIndicesResponse(struct soap*, _contest23__ColumnNamesToIndicesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__contest23__ColumnNamesToIndicesResponse(struct soap*, _contest23__ColumnNamesToIndicesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__contest23__ColumnNamesToIndicesResponse(struct soap*, const char *URL, _contest23__ColumnNamesToIndicesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__contest23__ColumnNamesToIndicesResponse(struct soap*, const char *URL, _contest23__ColumnNamesToIndicesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__contest23__ColumnNamesToIndicesResponse(struct soap*, const char *URL, _contest23__ColumnNamesToIndicesResponse*);
    soap_POST_recv__contest23__ColumnNamesToIndicesResponse(struct soap*, _contest23__ColumnNamesToIndicesResponse*);
    @endcode

  - <contest23:ExchangeFrequencies> @ref _contest23__ExchangeFrequencies
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__contest23__ExchangeFrequencies(struct soap*, _contest23__ExchangeFrequencies*);
    // Writer (returns SOAP_OK on success):
    soap_write__contest23__ExchangeFrequencies(struct soap*, _contest23__ExchangeFrequencies*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__contest23__ExchangeFrequencies(struct soap*, const char *URL, _contest23__ExchangeFrequencies*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__contest23__ExchangeFrequencies(struct soap*, const char *URL, _contest23__ExchangeFrequencies*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__contest23__ExchangeFrequencies(struct soap*, const char *URL, _contest23__ExchangeFrequencies*);
    soap_POST_recv__contest23__ExchangeFrequencies(struct soap*, _contest23__ExchangeFrequencies*);
    @endcode

  - <contest23:ExchangeFrequenciesResponse> @ref _contest23__ExchangeFrequenciesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__contest23__ExchangeFrequenciesResponse(struct soap*, _contest23__ExchangeFrequenciesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__contest23__ExchangeFrequenciesResponse(struct soap*, _contest23__ExchangeFrequenciesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__contest23__ExchangeFrequenciesResponse(struct soap*, const char *URL, _contest23__ExchangeFrequenciesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__contest23__ExchangeFrequenciesResponse(struct soap*, const char *URL, _contest23__ExchangeFrequenciesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__contest23__ExchangeFrequenciesResponse(struct soap*, const char *URL, _contest23__ExchangeFrequenciesResponse*);
    soap_POST_recv__contest23__ExchangeFrequenciesResponse(struct soap*, _contest23__ExchangeFrequenciesResponse*);
    @endcode

*/

/**

@section contest22 Top-level root elements of schema "urn:ContestQsos2/Imports"

*/

/* End of ContestQsos2.h */
